/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2agencia;
import clases.*;
import javax.swing.DefaultListModel;
/**
 *
 * @author Juan RigobertoZu√±iga
 */
public class Modnegocios extends javax.swing.JFrame {

    /**
     * Creates new form Modnegocios
     */
    public Modnegocios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setText("Modulo de negocios:");

        jButton2.setText("Paquetes Disponibles");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Aerolineas y Buses");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Hoteles y Resorts");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Crueceros");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Rentadoras de Autos");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Destinos Turisticos");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Lugares de E&E");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jList1);

        jButton8.setText("Regresar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Eliminar Paquete");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int i=0;
        String limpiar[]=new String[30];
        //agrega datos en blanco para limpiar la listacompleta
        DefaultListModel modelo1 = new DefaultListModel();
        for(int j=0;j<limpiar.length;j++){            
            modelo1.addElement(limpiar[j]);
        }jList1.setModel(modelo1);
        
        String vec[]=new String[modulocarga.hoteles.getSize()];
        Nodo aux = modulocarga.hoteles.inicio;
        hoteles pac;//instancia un objeto para cstear
        while (aux!=null){
            pac = (hoteles) aux.dato;//devuelve un objeto de casteo
            String paquete=pac.codigo+"-----"+pac.direccion+"-----"+pac.numtotal+"-----"+pac.destino;
            vec[i]=paquete;
            aux = aux.siguiente;//pasa al siguiente nodo
            i++;
        }
        DefaultListModel modelo = new DefaultListModel();
        for(int j=0;j<vec.length;j++){            
            modelo.addElement(vec[j]);
        }jList1.setModel(modelo);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int i=0;
        String limpiar[]=new String[30];
        //agrega datos en blanco para limpiar la listacompleta
        DefaultListModel modelo1 = new DefaultListModel();
        for(int j=0;j<limpiar.length;j++){            
            modelo1.addElement(limpiar[j]);
        }jList1.setModel(modelo1);
        
        String vec[]=new String[modulocarga.lugarest.getSize()];
        Nodo aux = modulocarga.lugarest.inicio;
        lugares pac;//instancia un objeto para cstear
        while (aux!=null){
            pac = (lugares) aux.dato;//devuelve un objeto de casteo
            String paquete=pac.codigo+"-----"+pac.lugar+"-----"+pac.descri+"-----"+pac.pais+"-----"+pac.ciudad+"-----"+pac.direccion+"-----"+pac.minimo+"-----"+pac.horactividad+"-----"+pac.horafuncion+"-----"+pac.recomendacion+"-----"+pac.codestino;
            vec[i]=paquete;
            aux = aux.siguiente;//pasa al siguiente nodo
            i++;
        }
        DefaultListModel modelo = new DefaultListModel();
        for(int j=0;j<vec.length;j++){            
            modelo.addElement(vec[j]);
        }jList1.setModel(modelo);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int i=0;
        String limpiar[]=new String[modulocarga.paquetes.getSize()];
        DefaultListModel modelo1 = new DefaultListModel();
        for(int j=0;j<limpiar.length;j++){            
            modelo1.addElement(limpiar[j]);
        }jList1.setModel(modelo1);
        String vec[]=new String[modulocarga.paquetes.getSize()];
        Nodo aux = modulocarga.paquetes.inicio;
        paquete paq=new paquete();
        paquete pac;//instancia un objeto para cstear
        while (aux!=null){
            pac = (paquete) aux.dato;//devuelve un objeto de casteo
            String paquete=pac.codigo+"------"+pac.tipo+"------"+pac.clasificacion+"-----"+pac.cantidad+"------"+pac.transporte+"-----"+pac.hospedage+"-----"+pac.codcreucero+"-----"+pac.codrenta+"-----"+pac.codestino+"-----"+pac.codlugar+"-----"+pac.costo;
            vec[i]=paquete;
            aux = aux.siguiente;//pasa al siguiente nodo
            i++;
        }
        DefaultListModel modelo = new DefaultListModel();
        for(int j=0;j<vec.length;j++){            
            modelo.addElement(vec[j]);
        }jList1.setModel(modelo);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int i=0;
        String limpiar[]=new String[30];
        DefaultListModel modelo1 = new DefaultListModel();
        for(int j=0;j<limpiar.length;j++){            
            modelo1.addElement(limpiar[j]);
        }jList1.setModel(modelo1);
        String vec[]=new String[modulocarga.aerobuses.getSize()];
        Nodo aux = modulocarga.aerobuses.inicio;
        aerolineaybus pac;//instancia un objeto para cstear
        while (aux!=null){
            pac = (aerolineaybus) aux.dato;//devuelve un objeto de casteo
            String paquete=pac.codigo+"-----"+pac.horasal+"-----"+pac.horallega+"-----"+pac.capacidad+"-----"+pac.destino;
            vec[i]=paquete;
            aux = aux.siguiente;//pasa al siguiente nodo
            i++;
        }
        DefaultListModel modelo = new DefaultListModel();
        for(int j=0;j<vec.length;j++){            
            modelo.addElement(vec[j]);
        }jList1.setModel(modelo);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int i=0;
        String limpiar[]=new String[30];
        //agrega datos en blanco para limpiar la listacompleta
        DefaultListModel modelo1 = new DefaultListModel();
        for(int j=0;j<limpiar.length;j++){            
            modelo1.addElement(limpiar[j]);
        }jList1.setModel(modelo1);
        
        String vec[]=new String[modulocarga.cruceros.getSize()];
        Nodo aux = modulocarga.cruceros.inicio;
        crucero pac;//instancia un objeto para cstear
        while (aux!=null){
            pac = (crucero) aux.dato;//devuelve un objeto de casteo
            String paquete=pac.codigo+"-----"+pac.fechasal+"-----"+pac.fechallega+"-----"+pac.capacidad+"-----"+pac.duracion+"-----"+pac.descripcion+"-----"+pac.destino;
            vec[i]=paquete;
            aux = aux.siguiente;//pasa al siguiente nodo
            i++;
        }
        DefaultListModel modelo = new DefaultListModel();
        for(int j=0;j<vec.length;j++){            
            modelo.addElement(vec[j]);
        }jList1.setModel(modelo);        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int i=0;
        String limpiar[]=new String[30];
        //agrega datos en blanco para limpiar la listacompleta
        DefaultListModel modelo1 = new DefaultListModel();
        for(int j=0;j<limpiar.length;j++){            
            modelo1.addElement(limpiar[j]);
        }jList1.setModel(modelo1);
        
        String vec[]=new String[modulocarga.rentadeautos.getSize()];
        Nodo aux = modulocarga.rentadeautos.inicio;
        rentautos pac;//instancia un objeto para cstear
        while (aux!=null){
            pac = (rentautos) aux.dato;//devuelve un objeto de casteo
            String paquete=pac.codigo+"------"+pac.codcliente+"-----"+pac.pasajeros+"-----"+pac.tipo+"-----"+pac.dias+"-----"+pac.monto+"-----"+pac.entrega+"-----"+pac.devolver+"-----"+pac.condiciones;
            vec[i]=paquete;
            aux = aux.siguiente;//pasa al siguiente nodo
            i++;
        }
        DefaultListModel modelo = new DefaultListModel();
        for(int j=0;j<vec.length;j++){            
            modelo.addElement(vec[j]);
        }jList1.setModel(modelo);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int i=0;
        String limpiar[]=new String[30];
        //agrega datos en blanco para limpiar la listacompleta
        DefaultListModel modelo1 = new DefaultListModel();
        for(int j=0;j<limpiar.length;j++){            
            modelo1.addElement(limpiar[j]);
        }jList1.setModel(modelo1);
        
        String vec[]=new String[modulocarga.destinos.getSize()];
        Nodo aux = modulocarga.destinos.inicio;
        destino pac;//instancia un objeto para cstear
        while (aux!=null){
            pac = (destino) aux.dato;//devuelve un objeto de casteo
            String paquete=pac.codigo+"-----"+pac.pais+"-----"+pac.ciudad+"-----"+pac.direccion+"-----"+pac.nomdestino+"-----"+pac.descridesti+"-----"+pac.descrimedidas;
            vec[i]=paquete;
            aux = aux.siguiente;//pasa al siguiente nodo
            i++;
        }
        DefaultListModel modelo = new DefaultListModel();
        for(int j=0;j<vec.length;j++){            
            modelo.addElement(vec[j]);
        }jList1.setModel(modelo);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Inicio init=new Inicio(Login.admin);
        init.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Epaquete eliminar=new Epaquete();
        eliminar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modnegocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modnegocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modnegocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modnegocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modnegocios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
